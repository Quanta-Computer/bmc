#!/bin/sh
### BEGIN INIT INFO
# Provides:          avahi
# Required-Start:    $remote_fs dbus
# Required-Stop:     $remote_fs dbus
# Should-Start:	     $syslog
# Should-Stop:       $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Avahi mDNS/DNS-SD Daemon
# Description:       Zeroconf daemon for configuring your network 
#                    automatically
### END INIT INFO

#set -e
# chkconfig: 2345 10 90
#Runlevel : S = S48
#Runlevel : 6 = K44
#Runlevel : 7 = K44
#Runlevel : 8 = K44
#Runlevel : 9 = K48
#Runlevel : 9 = S48



PATH=/sbin:/bin:/usr/sbin:/usr/bin
DESC="Avahi mDNS/DNS-SD Daemon"
NAME="avahi-daemon"
DAEMON="/usr/sbin/$NAME"
SCRIPTNAME=/etc/init.d/$NAME
DNSCONFMAXLINE="9"

# Gracefully exit if the package has been removed.
test -x $DAEMON || exit 0

. /lib/lsb/init-functions

# Include avahi-daemon defaults if available.
test -f /etc/default/avahi-daemon && . /etc/default/avahi-daemon

DISABLE_TAG="/var/run/avahi-daemon/disabled-for-unicast-local"

#
#       Function that starts the daemon/service.
#
d_start() {
    modprobe capability >/dev/null 2>&1 || true

    $DAEMON -c && return 0
    if [ -e $DISABLE_TAG -a "$AVAHI_DAEMON_DETECT_LOCAL" != "0" ]; then 
      # Disabled because of the existance of an unicast .local domain
      log_warning_msg "avahi-daemon disabled because there is a unicast .local domain"
      exit 0;
    fi;
		
	
    $DAEMON -D
}

#
#       Function that stops the daemon/service.
#
d_stop() {
    if $DAEMON -c ; then 
       $DAEMON -k 
    fi
}

#
#       Function that reload the config file for the daemon/service.
#
d_reload() {
    $DAEMON -c && $DAEMON -r
}

#
#       Function that check the status of the daemon/service.
#
d_status() {
    $DAEMON -c && echo "$DESC is running" || echo "$DESC is not running"
}

case "$1" in
    start)
    	bond=`grep -in bond /conf/dns.conf | cut -d ":" -f 1`
        if [ ! -z $bond ]
        then
            var=`grep -C $DNSCONFMAXLINE bond0 /conf/dns.conf | tail -1 | cut -d"=" -f 2`
            while [ "$var" != "y" -a "$var" != "n" ]
            do
            	DNSCONFMAXLINE=`expr $DNSCONFMAXLINE - 1`
            	if [ "$DNSCONFMAXLINE" -lt "8" ]
            	then
            	    break
            	fi
            	var=`grep -C $DNSCONFMAXLINE bond0 /conf/dns.conf | tail -1 | cut -d"=" -f 2`
            done
            
            if [ "$var" == "n" ]
        	then
                d_stop
                exit 0
        	fi
        else
        	var=`grep -C $DNSCONFMAXLINE eth0 /conf/dns.conf | tail -1 | cut -d"=" -f 2`
            while [ "$var" != "y" -a "$var" != "n" ]
            do
            	DNSCONFMAXLINE=`expr $DNSCONFMAXLINE - 1`
            	if [ "$DNSCONFMAXLINE" -lt "8" ]
            	then
            	    break
            	fi
            	var=`grep -C $DNSCONFMAXLINE eth0 /conf/dns.conf | tail -1 | cut -d"=" -f 2`
            done
        	if [ "$var" == "n" ]
        	then
                d_stop
                exit 0
        	fi
        fi
        log_daemon_msg "Starting $DESC" "$NAME"
        d_start
        log_end_msg $?
        ;;
    stop)
        log_daemon_msg "Stopping $DESC" "$NAME"
        d_stop
        log_end_msg $?
        ;;
    reload)
        log_daemon_msg "Reloading services for $DESC" "$NAME"
        d_reload
        log_end_msg $?
        ;;
    restart|force-reload)
        log_daemon_msg "Restarting $DESC" "$NAME"
        $DAEMON -c && d_stop
        d_start
        log_end_msg $?
        ;;
    status)
        d_status
	;;
    *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload|reload}" >&2
        exit 1
        ;;
esac

exit 0
